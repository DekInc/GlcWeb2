@using ComModels;
@using ComModels.Models.EdiDB;
@model Tuple<LearLin830, IEnumerable<EdiSegName>, EdiViewer.Models.EdiDetailModel>

<div class="card box-shadow">
    <div class="card-header card-clin cursor" data-toggle="collapse" data-target="#@Model.Item1.HashId" aria-expanded="false" aria-controls="@Model.Item1.HashId" title="@Model.Item2.Where(Sn => Sn.Segment == "LIN").Fod().DescEng">
        LIN - @Model.Item2.Where(Sn => Sn.Segment == "LIN").Fod().Eng @Model.Item1.ProductId
    </div>
    <div class="collapse" id="@Model.Item1.HashId">
        <div class="card-body">
            <div class="container">
                <div class="row">
                    <div class="col-sm">
                        <b>Existencias del producto:</b>
                        @if (Model.Item3.Data.ListProdExist.Count() > 0) {
                            if (Model.Item3.Data.ListProdExist.Where(Pre => Pre.CodProducto == Model.Item1.ProductId.Trim()).Count() > 0) {
                                <text>@Html.QtyToMil(
                    Model.Item3.Data.ListProdExist.Where(Pre => Pre.CodProducto == Model.Item1.ProductId.Trim()).Select(Pr => Pr.Existencia).Sum(),
                    Model.Item3.Data.ListProdExist.Where(Pre => Pre.CodProducto == Model.Item1.ProductId.Trim()).Fod().UnidadDeMedida
                    )
                                </text>
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductIdQualifier", Model.Item3.Data.ListCodes)
                            @Html.CodeToStr("LIN.ProductIdQualifier", Model.Item1.ProductIdQualifier, Model.Item3.Data.ListCodes)
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductId", Model.Item3.Data.ListCodes)
                            @Model.Item1.ProductId
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductRefIdQualifier", Model.Item3.Data.ListCodes)
                            @Html.CodeToStr("LIN.ProductRefIdQualifier", Model.Item1.ProductRefIdQualifier, Model.Item3.Data.ListCodes)
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductRefId", Model.Item3.Data.ListCodes)
                            @Model.Item1.ProductRefId
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductPurchaseIdQualifier", Model.Item3.Data.ListCodes)
                            @Html.CodeToStr("LIN.ProductPurchaseIdQualifier", Model.Item1.ProductPurchaseIdQualifier, Model.Item3.Data.ListCodes)
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="SegmentDataCol">
                            @Html.ShowLabel("Data.LIN.ProductPurchaseId", Model.Item3.Data.ListCodes)
                            @Model.Item1.ProductPurchaseId
                        </div>
                    </div>
                </div>
            </div>
            @if (Model.Item3.Data.ListLinN1.Where(LN1 => LN1.ParentHashId == Model.Item1.HashId).Count() > 0) {
                <div class="card box-shadow">
                    <div class="card-header card-cn1 cursor" data-toggle="collapse" data-target="#@Model.Item3.Data.ListLinN1.Where(LN1 => LN1.ParentHashId == Model.Item1.HashId).Fod().HashId" aria-expanded="false" aria-controls="@Model.Item3.Data.ListLinN1.Where(LN1 => LN1.ParentHashId == Model.Item1.HashId).Fod().HashId" title="@Model.Item2.Where(Sn => Sn.Segment == "N1").Fod().DescEng">
                        N1 - @Model.Item2.Where(Sn => Sn.Segment == "N1").Fod().Eng
                    </div>
                    <div class="collapse" id="@Model.Item3.Data.ListLinN1.Where(LN1 => LN1.ParentHashId == Model.Item1.HashId).Fod().HashId">
                        <div class="card-body">
                            <div class="container">
                                @foreach (LearN1830 N1 in Model.Item3.Data.ListLinN1.Where(LN1 => LN1.ParentHashId == Model.Item1.HashId)) {
                                    @await Html.PartialAsync("_DetailsOnN1830",
                                   new Tuple<LearN1830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                                       N1,
                                       Model.Item2,
                                       Model.Item3.Data.ListCodes))
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
            }
            @foreach (LearN4830 N4 in Model.Item3.Data.ListLinN4.Where(LN4 => LN4.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnN4830",
               new Tuple<LearN4830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                   N4,
                   Model.Item2,
                   Model.Item3.Data.ListCodes))
                <hr />
            }
            @foreach (LearNte830 Nte in Model.Item3.Data.ListLinNte.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnNte830",
               new Tuple<LearNte830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                   Nte,
                   Model.Item2,
                   Model.Item3.Data.ListCodes))
                <hr />
            }

            @foreach (LearUit830 Uit in Model.Item3.Data.ListLinUit.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnUit830",
               new Tuple<LearUit830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                   Uit,
                   Model.Item2,
                   Model.Item3.Data.ListCodes))
                <hr />
            }
            @foreach (LearPrs830 Prs in Model.Item3.Data.ListLinPrs.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnPrs830",
               new Tuple<LearPrs830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                   Prs,
                   Model.Item2,
                   Model.Item3.Data.ListCodes))
                <hr />
            }
            @foreach (LearSdp830 Sdp in Model.Item3.Data.ListLinSdp.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnSdp830",
               new Tuple<LearSdp830, IEnumerable<EdiSegName>, IEnumerable<LearFst830>, IEnumerable<LearCodes>, IEnumerable<LearUit830>, IEnumerable<LearShp830>, IEnumerable<EdiDetailQtysModel>>(
                   Sdp,
                   Model.Item2,
                   Model.Item3.Data.ListSdpFst.Where(F => F.ParentHashId == Sdp.HashId),
                   Model.Item3.Data.ListCodes,
                   Model.Item3.Data.ListLinUit.Where(LNte => LNte.ParentHashId == Model.Item1.HashId),
                   Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId && LShp.QuantityQualifier == "02"),
                   Model.Item3.EdiDetailQtys
                   ))
                <hr />
            }
            <div class="row">
                <div class="col-sm">
                    <div class="form-group">
                        <form id="form@(Model.Item1.HashId)" asp-action="UpdateLinComments" method="post">
                            <b>Comentarios sobre cambios de cantidades a enviar para este producto:</b>
                            <textarea class="form-control divComments" id="TxtLinCom@(Model.Item1.HashId)" name="TxtLinCom@(Model.Item1.HashId)">@Model.Item1.Comments</textarea>
                            <button id="btnComm@(Model.Item1.HashId)" class="btn btn-primary btn-lg font-size-12" type="button">Guardar <div id="divSpin@(Model.Item1.HashId)" class="spinner-border spinner-border-sm text-danger" style="display: none" role="status"><span class="sr-only">Loading...</span></div></button>
                        </form>
                        <script>
                            //$('#form@(Model.Item1.HashId)').serialize(),
                            $('#btnComm@(Model.Item1.HashId)').on("click", function () {
                                var btnName = '#btnComm@(Model.Item1.HashId)';
                                var spinName = '#divSpin@(Model.Item1.HashId)';
                                $(btnName).prop('disabled', true);
                                $(spinName).show();
                                //e.preventDefault;
                                $.ajax({
                                    url: '@this.Url.Action("UpdateLinComments")',
                                    type: 'POST',
                                    dataType: 'JSON',
                                    data: 'TxtLinCom@(Model.Item1.HashId)=' + $('#TxtLinCom@(Model.Item1.HashId)').val() + '&' + $('.realQtySelector').serialize(),
                                    success: function (json) {
                                        $(btnName).removeAttr('disabled');
                                        if (json.data == '') {

                                        }
                                        else if (json.data == 'ok') {
                                            menErrorEdi('Información guardada', '');
                                        }
                                        else { menErrorEdi(json.data, ''); }
                                        $(spinName).hide();
                                    },
                                    error: function (xhr, ajaxOptions, thrownError) {
                                        $(btnName).removeAttr('disabled');
                                        $(spinName).hide();
                                        menErrorEdi(xhr.status, '');
                                        menErrorEdi(thrownError, '');
                                    }
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
            @if (Model.Item3.Data.ListLinFst.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Count() > 0) {
                <div class="card box-shadow">
                    <div class="card-header card-cfst cursor" data-toggle="collapse" data-target="#@Model.Item3.Data.ListLinFst.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId" aria-expanded="false" aria-controls="@Model.Item3.Data.ListLinFst.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId" title="@Model.Item2.Where(Sn => Sn.Segment == "FST").Fod().DescEng">
                        FST - @Model.Item2.Where(Sn => Sn.Segment == "FST").Fod().Eng
                    </div>
                    <div class="collapse" id="@Model.Item3.Data.ListLinFst.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId">
                        <div class="card-body">
                            <div class="container">
                                <div class="row">
                                    <div class="col-sm">
                                        <div class="SegmentDataCol">
                                            @Html.ShowLabel("Data.FST.FstDate", Model.Item3.Data.ListCodes)
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="SegmentDataCol">
                                            @Html.ShowLabel("Data.FST.Quantity", Model.Item3.Data.ListCodes)
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="SegmentDataCol font-weight-bold">
                                            Cantidad calculada a enviar
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="SegmentDataCol font-weight-bold">
                                            Cantidad real enviada
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="SegmentDataCol">
                                            @Html.ShowLabel("Data.FST.ForecastQualifier", Model.Item3.Data.ListCodes)
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="SegmentDataCol">
                                            @Html.ShowLabel("Data.FST.ForecastTimingQualifier", Model.Item3.Data.ListCodes)
                                        </div>
                                    </div>
                                </div>
                                @foreach (LearFst830 Fst in Model.Item3.Data.ListLinFst.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                                    @await Html.PartialAsync("_DetailsOnFst830",
                                            new Tuple<LearFst830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>, int, IEnumerable<LearUit830>, IEnumerable<LearShp830>, IEnumerable<EdiDetailQtysModel>>(
                                                Fst,
                                                Model.Item2,
                                                Model.Item3.Data.ListCodes,
                                                0,
                                                Model.Item3.Data.ListLinUit,
                                                Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId && LShp.QuantityQualifier == "02"),
                                                Model.Item3.EdiDetailQtys
                                                ))
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
            }
            @if (Model.Item3.Data.ListLinAth.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Count() > 0) {
                <div class="card box-shadow">
                    <div class="card-header card-cath cursor" data-toggle="collapse" data-target="#@Model.Item3.Data.ListLinAth.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId" aria-expanded="false" aria-controls="@Model.Item3.Data.ListLinAth.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId" title="@Model.Item2.Where(Sn => Sn.Segment == "ATH").Fod().DescEng">
                        ATH - @Model.Item2.Where(Sn => Sn.Segment == "ATH").Fod().Eng
                    </div>
                    <div class="collapse" id="@Model.Item3.Data.ListLinAth.Where(LNte => LNte.ParentHashId == Model.Item1.HashId).Fod().HashId">
                        <div class="card-body">
                            @foreach (LearAth830 Ath in Model.Item3.Data.ListLinAth.Where(LNte => LNte.ParentHashId == Model.Item1.HashId)) {
                                @await Html.PartialAsync("_DetailsOnAth830",
                                        new Tuple<LearAth830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                                            Ath,
                                            Model.Item2,
                                            Model.Item3.Data.ListCodes))
                            }
                        </div>
                    </div>
                </div>
                <hr />
            }
            @if (Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId).Count() > 0) {
                <div class="card box-shadow">
                    <div class="card-header card-cshp cursor" data-toggle="collapse" data-target="#@Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId).Fod().HashId" aria-expanded="false" aria-controls="@Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId).Fod().HashId" title="@Model.Item2.Where(Sn => Sn.Segment == "SHP").Fod().DescEng">
                        SHP - @Model.Item2.Where(Sn => Sn.Segment == "SHP").Fod().Eng
                    </div>
                    <div class="collapse" id="@Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId).Fod().HashId">
                        <div class="card-body">
                            <div class="container">
                                @foreach (LearShp830 Shp in Model.Item3.Data.ListLinShp.Where(LShp => LShp.ParentHashId == Model.Item1.HashId)) {
                                    @await Html.PartialAsync("_DetailsOnShp830",
                                            new Tuple<LearShp830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                                                Shp,
                                                Model.Item2,
                                                Model.Item3.Data.ListCodes))
                                    @foreach (LearRef830 Ref in Model.Item3.Data.ListShpRef.Where(R => R.ParentHashId == Shp.HashId)) {
                                        @await Html.PartialAsync("_DetailsOnRef830",
                                       new Tuple<LearRef830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                                           Ref,
                                           Model.Item2,
                                           Model.Item3.Data.ListCodes))
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
            }
            @foreach (LearRef830 Ref in Model.Item3.Data.ListLinRef.Where(LRef => LRef.ParentHashId == Model.Item1.HashId)) {
                @await Html.PartialAsync("_DetailsOnRef830",
               new Tuple<LearRef830, IEnumerable<EdiSegName>, IEnumerable<LearCodes>>(
                   Ref,
                   Model.Item2,
                   Model.Item3.Data.ListCodes))
                <hr />
            }
        </div>
    </div>
</div>
