@using ComModels
@{
    ViewData["Title"] = "Realizar pedidos";
    Layout = "_Layout";
}
<script>
    var arrayProductosOld = [];
    @if(ViewBag.ListOldDis != null)
    {
        <text>arrayProductosOld = </text> @Html.Raw(ViewBag.ListOldDis);
    }
</script>
<style>
    .margin5 {
        margin-bottom: 10px;
        margin-top: 10px;
    }    
</style>
<div class="container">
    <div class="card-deck cardMain">
        <div class="card box-shadow">
            <div class="card-header">
                <h4 class="my-0 font-weight-normal">Realizar pedidos</h4>
            </div>
            <div class="card-body box-shadow">
                <div>
                    <span id="spanClientName"></span>
                    <hr />
                </div>
                <div>
                    <div class="row border">
                        <div class="col">
                            @*<label class="label" for="TxtCodProducto">Cod producto</label><br />*@
                            <input class="form-control maxWidth320" id="TxtCodProducto" maxlength="50" placeholder="Cod producto" />
                        </div>
                        <div class="col">
                            <div class="form-check margin5">
                                <input class="form-check-input" id="chkOnlyAvailable" name="chkOnlyAvailable" type="checkbox" />
                                <label class="form-check-label" for="chkOnlyAvailable">Mostrar solo Disponibles > 0</label>
                            </div>
                        </div>
                    </div>
                </div>                
                <button class="btn btn-primary" id="btnNewDis" data-togle="tooltip" data-html="true" title="Seleccione los productos a pedir y acá click acá para solicitarlos">Enviar pedido</button>
                <button class="btn btn-primary" id="btnExportDis" data-togle="tooltip" data-html="true" title="Exportar pedido en Excel">
                    Exportar pedido a Excel <img src="/images/excel.png" class="imgButton">
                    <div id="divSpinPrintAll" class="spinner-border spinner-border-sm text-danger" style="display: none" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </button>
                <form id="formReportes" accept-charset="UTF-8" method="post">
                    <table id="tblReportes" class="table table-striped table-bordered nowrap table-hover display tblReportes" cellspacing="0" role="grid" style="width: 100%;">
                        <thead>
                            <tr>
                                <th>Cod Producto</th>
                                <th>Bodega</th>
                                <th>Existencia</th>
                                <th>Producto</th>                                
                                <th>Reservado</th>
                                <th>Disponible</th>
                                <th>Cantidad a pedir</th>
                                <th>Bultos</th>
                                <th>Peso</th>
                                <th>Volumen</th>
                                <th>Unidades x Bulto</th>
                                @*<th>Lote</th>
                                <th>Contenedor</th>*@
                            </tr>
                        </thead>
                    </table>
                    <br />
                    <br />
                    <br />
                </form>
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("_PopNewDis")
<table id="tblExport2" class="noShow" style="width: 100%; border: 1px solid #000;">
    <thead>
        <tr>
            <th>Cod Producto</th>
            <th>Bodega</th>
            <th>Producto</th>
            <th>Existencia</th>
            <th>Reservado</th>
            <th>Disponible</th>
            <th>Cantidad a pedir</th>
            <th>Bultos</th>
            <th>Peso</th>
            <th>Volumen</th>
            <th>Unidades x Bulto</th>
            @*<th>Lote</th>
            <th>Contenedor</th>*@
        </tr>
    </thead>
    <tbody></tbody>
</table>
<script>
    var ModalPopNewDis = null;
    var domtblReportes = null;
    var arrayProductos = [];
    var tabIndexSort = 20;
    var HashId = '';
    var foo = function () {
    };
    $.urlParam = function (name) {
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
        if (results == null) {
            return null;
        }
        return decodeURI(results[1]) || 0;
    }
    function reDrawObjects() {
        $('#spanClientName').css('display', 'block');
        if (window.mobileAndTabletcheck()) {
            $('#btnNewDis').addClass('btn-block');
            $('#btnNewDis').css('margin-bottom', '16px');
            $('#btnNewDis').css('margin-top', '16px');
            $('#spanClientName').css('text-align', 'center');            
            $('#btnExportDis').addClass('btn-block');
            $('#btnExportDis').css('margin-bottom', '16px');
        } else {
            $('#spanClientName').css('margin-bottom', '10px');
        }
    }
    function fillTblReportes() {
        domtblReportes = $("#tblReportes").DataTable({
            select: true,
            responsive: true,            
            destroy: true,
            info: false,
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "lengthMenu": [[15, 25, 35, 50, 60], [15, 25, 35, 50, 60]],
            "language":
            {
                "processing": "<div class='divAjax'>Obteniendo datos<br /><img style='width:50px; height:50px;' src='/images/ajax.gif' /></div>",
                "decimal": ".",
                "thousands": ",",
                "emptyTable": "No hay información"
            },
            "ajax": {
                "url": "@this.Url.Action("GetInventory")?chkOnlyAvailable=" + $('#chkOnlyAvailable').prop('checked'),                
                "type": "POST",
                "datatype": "json",
                "dataSrc": function (json) {
                    if (json.data == '') return '';
                    if (json.errorMessage != '') {
                        menErrorEdi(json.errorMessage);
                        return json.data;
                    }
                    json.listAllProd.forEach(pr => {
                        var existe = false;
                        for (var j = 0; j < arrayProductos.length; j++) {
                            if (arrayProductos[j].codProducto == pr.codProducto.replace(/ /g, '^')) {
                                existe = true;                                
                            }
                        }
                        if (!existe) {
                            arrayProductos.push({
                                codProducto: pr.codProducto.replace(/ /g, '^'),
                                producto: pr.descripcion,
                                existencia: pr.existencia,
                                cantPedir: 0,
                                dateProm: ''
                            });
                        }
                    });  
                    arrayProductosOld.forEach(pr2 => {
                        if (arrayProductos.filter(Prod => Prod.codProducto == pr2.codProducto).length > 0)
                            arrayProductos.filter(Prod => Prod.codProducto == pr2.codProducto)[0].cantPedir = pr2.cantPedir;
                    }); 
                    return json.data;
                }
            },
            "order": [[0, "asc"]],
            "columnDefs": [
            {
                "targets": [1],
                "visible": false
            }],
            "columns": [
                { "data": "codProducto", "name": "CodProducto", "autoWidth": true, "defaultContent": "" },
                { "data": "bodega", "name": "Bodega", "autoWidth": true, "defaultContent": "" },                
                //{ "data": "descripcion", "name": "descripcion", "autoWidth": true, "defaultContent": "" },
                { "data": "existencia", "name": "Existencia", "autoWidth": true, "defaultContent": "" },
                {
                    data: "descripcion",
                    render: function (data, type, row) {
                        if (type === 'display') {
                            return '<div class="limitText">' + row.descripcion + '</div>';
                        }
                        return '';
                    },
                    className: "dt-body-center"
                },
                { "data": "reservado", "name": "Reservado", "autoWidth": true, "defaultContent": "" },
                { "data": "disponible", "name": "Disponible", "autoWidth": true, "defaultContent": "" },
                {
                    //data: "0",
                    render: function (data, type, row) {
                        if (type === 'display') {
                            var cant = 0;
                            for (var j = 0; j < arrayProductos.length; j++) {
                                if (arrayProductos[j].codProducto == row.codProducto.replace(/ /g, '^')) {
                                    cant = arrayProductos[j].cantPedir;
                                }
                            }
                            tabIndexSort++;
                            return '<input id="TxtProducto' + row.codProducto.replace(/ /g, '^') + '" name="TxtProducto' + row.codProducto.replace(/ /g, '^') + '" type="textbox" maxlength="7" class="editor-active form-control txtCantPedir" tabIndex="' + tabIndexSort + '" value="' + cant + '" onkeypress="return changeProdPedido(isNumberKey(event), ' + "'" + row.codProducto.replace(/ /g, '^') + "'" + ', this)">';
                        }
                        return '';
                    },
                    className: "dt-body-center"
                },
                { "data": "bultos", "name": "Bultos", "autoWidth": true, "defaultContent": "" },
                { "data": "peso", "name": "Peso", "autoWidth": true, "defaultContent": "" },
                { "data": "volumen", "name": "Volumen", "autoWidth": true, "defaultContent": "" },
                { "data": "uxb", "name": "uxb", "autoWidth": true, "defaultContent": "" }
                //{ "data": "lote", "name": "Lote", "autoWidth": true, "defaultContent": "" },
                //{ "data": "contenedor", "Contenedor": "Existencia", "autoWidth": true, "defaultContent": "" }                
            ]
        });
    }
    function getClientName() {
        $.ajax({
            method: "GET",
            url: "@this.Url.Action("GetClientName")",
            success: function (data) {
                if (data.info.codError != 0) {
                    menErrorEdi(data.info.mensaje, 'Error');
                    return;
                }
                $('#spanClientName').html(data.data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                menErrorEdi(xhr.status, 'Error throw in js');
                menErrorEdi(thrownError, 'Error throw in js');
            }
        });
    }
    function changeProdPedido(isValid, codProd, txtCant) {
        if (!isValid) return isValid;
        setTimeout(function () {
            for (var j = 0; j < arrayProductos.length; j++) {
                if (arrayProductos[j].codProducto == codProd) {                    
                    arrayProductos[j].cantPedir = $(txtCant).val();                    
                    //$('#' + $(txtCant).attr('id').replace('TxtProducto', 'hddProducto')).val($(txtCant).val());                    
                }
            }            
        }, 366);
        return isValid;
    }
    $(document).ready(function () {
        getClientName();
        fillTblReportes();
        reDrawObjects();
        $('#btnNewDis').on('click', function (e) {
            $('#exampleModalLabel2').html('Enviar pedido');
            ModalPopNewDis = $('#modalPopNewDis').modal();
            onInit();
        });
        $('#chkOnlyAvailable').on('change', function (Event) {            
            fillTblReportes();
        });
        $('#btnExportDis').on('click', function (Event) {            
            $('#divSpinPrintAll').show();
            var arrayProductosSend = arrayProductos;
            $.each(arrayProductosSend, function (i, Pr) {
                Pr.codProducto = Pr.codProducto
            });            
            $.ajax({
                method: "POST",
                contentType: "application/json",
                dataType: "JSON",
                url: "@this.Url.Action("GetInventoryJson")?chkOnlyAvailable=" + $('#chkOnlyAvailable').prop('checked'), //JSON.stringify(arrayProductosSend)
                data: JSON.stringify(arrayProductosSend),
                success: function (data) {
                    $('#divSpinPrintAll').show();                    
                    if (data.info.codError != 0 || data.data == '') {
                        console.log(data);
                        menErrorEdi(data.info.mensaje, 'Error al obtener los datos');
                        return;
                    }
                    $($("#tblExport2").find('tbody')).html('');
                    $.each(data.data, function (i, inventario) {
                        console.log(inventario);
                        $("#tblExport2").find('tbody')
                            .append($('<tr>')
                                .append($('<td>')
                                    .append(inventario.codProducto))
                                .append($('<td>')
                                    .append(inventario.bodega))
                                .append($('<td>')
                                    .append(inventario.descripcion))
                                .append($('<td>')
                                    .append(inventario.existencia))
                                .append($('<td>')
                                    .append(inventario.reservado))
                                .append($('<td>')
                                    .append(inventario.disponible))
                                .append($('<td>')
                                    .append(inventario.clienteID))
                                .append($('<td>')
                                    .append(inventario.bultos))
                                .append($('<td>')
                                    .append(inventario.peso))
                                .append($('<td>')
                                    .append(inventario.volumen))
                                .append($('<td>')
                                    .append(inventario.uxb))
                                .append($('<td>')
                                    .append(inventario.lote))
                                .append($('<td>')
                                    .append(inventario.contenedor))
                            );
                    });
                    $("#tblExport2").tblToExcel();
                    $('#divSpinPrintAll').hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {                    
                    $('#divSpinPrintAll').hide();
                    menErrorEdi(thrownError, 'Error throw in js2');
                    menErrorEdi(xhr.status, 'Error throw in js1');                    
                }
            });
        });
    });
</script>