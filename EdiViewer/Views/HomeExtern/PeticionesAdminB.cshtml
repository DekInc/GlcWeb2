@using ComModels
@{
    ViewData["Title"] = "Ordenes pendientes";
    Layout = "_Layout";
}
<div id="mainDiv">
    <div class="container">
        <div class="card-deck cardMain">
            <div class="card box-shadow">
                <div class="card-header">
                    <h4 class="my-0 font-weight-normal">Ordenes pendientes&nbsp;<img class="imgHeaderHelp" src="~/images/help.png" title="Pantalla que muestra las ordenes pendientes de despachar de Payless" alt="Pantalla que muestra las ordenes pendientes de despachar de Payless"></h4>
                </div>
                <div class="card-body">
                    <form id="formSearch">
                        <div class="container">
                            <div class="row">
                                <div class="col-sm">
                                    <label>Cliente</label>
                                    <div id="divSpinCliente" class="spinner-border spinner-border-sm text-danger" style="display: none" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                    <br />
                                    <select class="form-control" id="cbClient" name="cbClient"></select>
                                    <div class="form-check margin5">
                                        <input class="form-check-input" id="chkPending" name="chkPending" type="checkbox" checked="checked" />
                                        <label class="form-check-label" for="chkPending">Mostrar solo pendientes</label>
                                    </div>
                                </div>
                                <div class="col-sm">
                                    <label class="label" for="dtp1">Fecha esperada de envió</label><br />
                                    <input class="form-control datepicker dtp3" data-date-format="dd/mm/yyyy" id="dtp1" maxlength="10" autocorrect="off" autocapitalize="off" autocomplete="off" />
                                </div>
                            </div>
                            <div class="row margin5">
                                <div class="col-sm">
                                    <button id="btnFiltrar" class="btn btn-primary" type="button">
                                        &nbsp;&nbsp;&nbsp;Mostrar&nbsp;&nbsp;&nbsp;
                                    </button>
                                    <button id="btnLimpiar" class="btn btn-primary" type="button">
                                        &nbsp;&nbsp;&nbsp;Limpiar&nbsp;&nbsp;&nbsp;
                                        <div id="divSpinLimpiar" class="spinner-border spinner-border-sm text-danger" style="display: none" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                    </button>
                                    <button id="btnPrintAll" class="btn btn-primary" type="button">
                                        &nbsp;&nbsp;<img src="/images/excel.png" class="imgButton" /> &nbsp;Ordenes pendientes&nbsp;&nbsp;&nbsp;
                                        <div id="divSpinPrintAll" class="spinner-border spinner-border-sm text-danger" style="display: none" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="clearfix"></div>
                    <br />
                    <div id="gridOrdenes" style="min-height: 460px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <table id="tblExport1" class="noShow" style="width: 100%; border: 1px solid #000;">
            <thead>
                <tr>
                    <th>PedidoId</th>
                    <th>Bodega</th>
                    <th>Tienda</th>
                    <th>Fecha de entrega</th>
                    <th>Periodo</th>
                    <th>Categoria</th>
                    <th>Barcode</th>
                    <th>CP</th>
                    <th>Departamento</th>
                    <th>Producto</th>
                    <th>Lote</th>
                    <th>Talla</th>
                    <th>FullPed</th>
                    <th>Divert</th>
                    <th>Tienda Destino</th>
                    <th>IdRack</th>
                    <th>Nombre rack</th>
                    <th>Cantidad pedida</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
@await Html.PartialAsync("_PopChangePedido")
@await Html.PartialAsync("_PopDeletePedido")
<script>
    var ModalPopPeticionDet = null;
    var domtblReportes = null;
    var domtblPeticionDet = null;
    var HashId = '';
    var gridOrdenes = null;
    var gridOrdenesDet = null;
    var foo = function () {
    };
    $.urlParam = function (name) {
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
        if (results == null) {
            return null;
        }
        return decodeURI(results[1]) || 0;
    }
    function refreshGrid(auto) {
        w2ui.grid.autoLoad = auto;
        w2ui.grid.skip(0);
    }
    function afterFillCombobox() {
        $('#cboList').append($('<option>', {
            value: 0,
            text: 'Ninguno'
        }));
    }
    function assignDis(clienteId, tiendaId, pedidoId) {
        $('#modalPopChangeStoreLabel').html('Cambio de despacho');
        $('#modalPopChangeStore').modal();
        fillCombobox('#divSpinList', '@this.Url.Action("GetPedidosWmsByStore", "HomeExtern")?ClienteId=' + clienteId + '&TiendaId=' + tiendaId, '#cboList', 'pedidoId', 'pedidoBarcode', 0);
        if (gridOrdenesDet == null)
            crearGridDet(clienteId, tiendaId);
        else
            gridOrdenesDet.reload2('@this.Url.Action("GetPedidosWmsByStore", "Grids")?ClienteId=' + clienteId + '&tiendaId=' + tiendaId);
        $('#btnPopChangeStoreLabelOk').off('click');
        $('#btnPopChangeStoreLabelOk').on('click', function () {
            makeAjaxPost('@this.Url.Action("ChangePedidoExternoIdWMS", "HomeExtern")?PedidoId=' + pedidoId + '&PedidoIdWms=' + $('#cboList').val(), function (data) {
                if (data.info.codError != 0) {
                    menErrorEdi(data.info.mensaje);
                    return;
                } else {
                    menErrorEdi(data.data, 'Información');
                    gridOrdenes.reload2('@this.Url.Action("GetPeticionesAdminB", "Grids")?ClienteId=' + $('#cbClient').val() + '&dtp1=' + $('#dtp1').val() + '&chkPending=' + $('#chkPending').prop('checked'));
                }
            });
        });
    }    
    function borrarPedido(pedId) {
        pedidoId = pedId;
        $('#modalPopDeletePedido').modal();
    }
    function crearGrid() {
        var config = {
            grid: {
                name: 'gridOrdenes',
                selectType: 'cell',
                bResponsive: true,
                bMobile: window.mobileAndTabletcheck(),
                url: '@this.Url.Action("GetPeticionesAdminB", "Grids")?dtp1=' + $('#dtp1').val() + '&chkPending=' + $('#chkPending').prop('checked') + '&ClienteId=' + $('#cbClient').val(),
                show: {
                    footer: true,
                    toolbar: true,
                    expandColumn: window.mobileAndTabletcheck()
                },
                searches: [
                    { field: "id", caption: "Id orden", type: 'text' },
                    { field: "tiendaId", caption: "Tienda", type: 'text' },
                    { field: "fechaPedido", caption: "Fecha y hora esperada", type: 'text' }
                ],
                colShowResponsive: [
                    { field: 'id' },
                    { field: 'tiendaId' },
                    { field: 'cont' }
                ],
                columns: [
                    { field: "id", caption: "Id orden", sortable: true, hidden: false, size: '60px' },
                    {
                        field: "periodo", caption: "Ped WMS", sortable: true, render: function (record) {
                            var l1 = '', l2 = '';
                            if (!(record.pedidoWMS == 0 || record.pedidoWMS == null)) {
                                l2 = '<a target="_new" href="@this.Url.Action("PedidosDet", "HomeExtern")?PedidoId=' + record.pedidoWMS + '">' + record.pedidoWMS + '</a>';
                                l1 = ' | ';
                            }                            
                            l1 = l1 + '<span class="w2ui-buttons"><a href="javascript:assignDis(' + $('#cbClient').val() + ', ' + record.tiendaId + ', ' + record.id + ')">Asignar</a></span>';                            
                            return l2 + l1;
                        }
                    },
                    { field: "tiendaId", caption: "TiendaId", sortable: true, hidden: false, size: '60px' },
                    { field: "tienda", caption: "Tienda", sortable: true, hidden: true },
                    { field: "fechaPedido", caption: "Fecha y hora esperada", sortable: true, size: '120px' },
                    { field: "fechaCreacion", caption: "Fecha de creación", sortable: true, hidden: true },
                    { field: "tiendaIdDestino", caption: "Tienda Destino", sortable: true, size: '80px' },
                    {
                        field: "idEstado", caption: "Estado", sortable: false, render: function (record) {
                            if (record.idEstado == 1) return '<span class="thisSpan" alt="' + record.id + '">Guardado</span>';
                            if (record.idEstado == 2) return '<span class="thisSpan" alt="' + record.id + '">Pendiente</span>';
                            if (record.idEstado == 3) return '<span class="thisSpan" alt="' + record.id + '">Despachado</span>';
                            if (record.idEstado == 4) return '<span class="thisSpan" alt="' + record.id + '"><a href="javascript:borrarPedido(' + record.id + ')">¿BORRAR?</a></span>';
                        }
                    },
                    { field: "womanQty", caption: "Mujeres", sortable: true, hidden: false, size: '80px' },
                    { field: "manQty", caption: "Hombres", sortable: true, hidden: false, size: '80px' },
                    { field: "kidQty", caption: "Niñ@s", sortable: true, hidden: false, size: '80px' },
                    { field: "accQty", caption: "Accesorios", sortable: true, hidden: false, size: '80px' },
                    { field: "womanQtyT", caption: "T Mujeres", sortable: true, hidden: false, size: '80px' },
                    { field: "manQtyT", caption: "T Hombres", sortable: true, hidden: false, size: '80px' },
                    { field: "kidQtyT", caption: "T Niñ@s", sortable: true, hidden: false, size: '80px' },
                    { field: "accQtyT", caption: "T Accesorios", sortable: true, hidden: false, size: '80px' },
                    { field: "totalCp", caption: "Total CP", sortable: true, hidden: false },
                    { field: "total", caption: "Cantidad total", sortable: true },
                    { field: "womanQtyEnv", caption: "Mujeres Env", sortable: true, hidden: true },
                    { field: "manQtyEnv", caption: "Hombres Env", sortable: true, hidden: true },
                    { field: "kidQtyEnv", caption: "Niñ@s Env", sortable: true, hidden: true },
                    { field: "accQtyEnv", caption: "Accesorios Env", sortable: true, hidden: true },
                    { field: "totalCpEnv", caption: "Total CP Env", sortable: true, hidden: true },
                    { field: "totalEnv", caption: "Cantidad total Env", sortable: true },
                    { field: "porcValid", caption: "Porc validez", sortable: true },
                    { field: "divert", caption: "Divert", sortable: true, size: '60px' },
                    { field: "fullPed", caption: "Full", sortable: true, size: '60px' }
                ]
            }
        };
        gridOrdenes = $('#gridOrdenes').w2grid(config.grid);
        arrayGrids['gridOrdenes'] = gridOrdenes;
    }
    function crearGridDet(clienteId, tiendaId) {
        var config = {
            grid: {
                name: 'gridOrdenesDet',
                selectType: 'cell',
                bResponsive: true,
                bMobile: window.mobileAndTabletcheck(),
                url: '@this.Url.Action("GetPedidosWmsByStore", "Grids")?ClienteId=' + clienteId + '&tiendaId=' + tiendaId,
                show: {
                    footer: true,
                    toolbar: true,
                    expandColumn: window.mobileAndTabletcheck(),
                    toolbarInput: false
                },
                searches: [
                    { field: "pedidoId", caption: "Id Pedido WMS", type: 'text' },
                    { field: "fechaPedido", caption: "Fecha pedido", type: 'text' },
                    { field: "estatus", caption: "Estado", type: 'text' },
                    { field: "bodega", caption: "Bodega", type: 'text' },
                    { field: "regimen", caption: "Regimen", type: 'text' }
                ],
                colShowResponsive: [
                    { field: 'barcode' },
                    { field: 'cantPedir' }
                ],
                columns: [
                    { field: "pedidoId", caption: "Id Pedido WMS", sortable: true, hidden: true },
                    { field: "nomBodega", caption: "Bodega", type: 'text', sortable: true },                    
                    { field: "pedidoBarcode", caption: "Pedido", type: 'text', sortable: true },
                    { field: "fechaPedido", caption: "Fecha pedido", type: 'text', sortable: true },
                    { field: "total", caption: "Total", type: 'text', sortable: true },
                    { field: "estatus", caption: "Estado", type: 'text', sortable: true },                    
                    { field: "regimen", caption: "Regimen", type: 'text', sortable: true },
                    { field: "observacion", caption: "Observación", sortable: true }
                ]
            }
        };
        gridOrdenesDet = $('#gridOrdenesDet').w2grid(config.grid);
        arrayGrids['gridOrdenesDet'] = gridOrdenesDet;
    }
    $(document).ready(function () {        
        fillComboboxPromise('#divSpinCliente', '@this.Url.Action("getClients", "HomeExtern")', '#cbClient', 'clienteId', 'nombre', 1432);
        $('#dtp1').datepicker();
        $('#dtpFechaEntrega').datetimepicker({ format: 'dd/mm/yyyy hh:ii' });
        $('#btnFiltrar').on("click", function () {
            if (gridOrdenes == null)
                crearGrid();
            else {
                gridOrdenes.clear();
                gridOrdenes.reload2('@this.Url.Action("GetPeticionesAdminB", "Grids")?ClienteId=' + $('#cbClient').val() + '&dtp1=' + $('#dtp1').val() + '&chkPending=' + $('#chkPending').prop('checked'));
            }
        });
        $('#btnLimpiar').on("click", function () {
            window.location.href = window.location.href;
        });
        $('#btnPopDeletePedidoLabelBorrar').on("click", function () {
            if ($('#txtObservaciones').val() == '') {
                menErrorEdi('Las observaciones están vacías.', 'Error');
                return;
            }
            $.ajax({
                method: "GET",
                url: "@this.Url.Action("SetDeleteDis", "HomeExtern")?PedidoId=" + pedidoId + '&Observaciones=' + $('#txtObservaciones').val() + '&FechaEntrega=' + $('#dtpFechaEntrega').val(),
                success: function (json) {
                    if (json.info.codError != 0)
                        menErrorEdi(json.info.mensaje, 'Error en petición');
                    else
                        menErrorEdi(json.data, 'Información');
                    gridOrdenes.reload2('@this.Url.Action("GetPeticionesAdminB", "Grids")?ClienteId=' + $('#cbClient').val() + '&dtp1=' + $('#dtp1').val() + '&chkPending=' + $('#chkPending').prop('checked'));
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    menErrorEdi(xhr.status, 'Error throw in js');
                    menErrorEdi(thrownError, 'Error throw in js');
                }
            });
        });
        $('#btnPopDeletePedidoLabelPendiente').on("click", function () {
            if ($('#txtObservaciones').val() == '') {
                menErrorEdi('Las observaciones están vacías.', 'Error');
                return;
            }
            $.ajax({
                method: "GET",
                url: "@this.Url.Action("SetRestoreDis", "HomeExtern")?PedidoId=" + pedidoId + '&Observaciones=' + $('#txtObservaciones').val() + '&FechaEntrega=' + $('#dtpFechaEntrega').val(),
                success: function (json) {
                    if (json.info.codError != 0)
                        menErrorEdi(json.info.mensaje, 'Error en petición');
                    else
                        menErrorEdi(json.data, 'Información');
                    gridOrdenes.reload2('@this.Url.Action("GetPeticionesAdminB", "Grids")?ClienteId=' + $('#cbClient').val() + '&dtp1=' + $('#dtp1').val() + '&chkPending=' + $('#chkPending').prop('checked'));
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    menErrorEdi(xhr.status, 'Error throw in js');
                    menErrorEdi(thrownError, 'Error throw in js');
                }
            });
        });
        $('#btnPrintAll').on("click", function () {
            $('#divSpinPrintAll').show();
            var arrayPedidosNorep = [];
            $.ajax({
                method: "GET",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded',
                xhrFields: { withCredentials: true },
                url: '@this.Url.Action("GetPedidosExternosPendientesAdmin", "Home")',
                timeout: 1200000,
                success: function (data) {
                    $('#divSpinPrintAll').hide();
                    if (data.codError != 0) {
                        menErrorEdi(data.errorMessage, 'Error');
                        return;
                    }
                    $($("#tblExport1").find('tbody')).html('');                    
                    $.each(data.data, function (i, pedido) {
                        $("#tblExport1").find('tbody')
                            .append($('<tr>')
                            .append($('<td>').append(pedido.pedidoId))
                            .append($('<td>').append(pedido.bodega))
                            .append($('<td>').append(pedido.tiendaId))
                            .append($('<td>').append(pedido.fechaPedido))
                            .append($('<td>').append(pedido.periodo))
                            .append($('<td>').append(pedido.categoria))
                            .append($('<td>').append(pedido.barcode))
                            .append($('<td>').append(pedido.cp))
                            .append($('<td>').append(pedido.departamento))
                            .append($('<td>').append(pedido.producto))
                            .append($('<td>').append(pedido.lote))
                            .append($('<td>').append(pedido.talla))
                            .append($('<td>').append(pedido.fullPed))
                            .append($('<td>').append(pedido.divert))
                            .append($('<td>').append(pedido.tiendaIdDestino))
                            .append($('<td>').append(pedido.idRack))
                            .append($('<td>').append(pedido.nombreRack))
                            .append($('<td>').append(1))
                        );
                    });
                    $("#tblExport1").tblToExcel();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('#divSpinPrintAll').hide();
                    menErrorEdi(xhr.status, 'Error throw in js');
                    menErrorEdi(thrownError, 'Error throw in js');
                }
            });
        });
    });
</script>
